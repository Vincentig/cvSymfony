{% extends ":admin:index.html.twig" %}

{% block contenu %}
    {{   parent() }}
    <h1>Skill creation</h1>

    {{ form(form) }}

        <ul class="record_actions">
    <li>
        <a href="{{ path('admin_skill') }}">
            Back to the list
        </a>
    </li>
</ul>
{% endblock %}

{% block script %}





    {{parent()}}
    <script  src="{{ asset('js/html.sortable.min.js')}}"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#personne_skills_skills').sortable({
                forcePlaceholderSize: true
            });

            $('#personne_skills_skills').sortable().bind('sortupdate', function(e, ui) {
                /*

                 This event is triggered when the user stopped sorting and the DOM position has changed.

                 ui.item contains the current dragged element.
                 ui.index contains the new index of the dragged element (considering only list items)
                 ui.oldindex contains the old index of the dragged element (considering only list items)
                 ui.elementIndex contains the new index of the dragged element (considering all items within sortable)
                 ui.oldElementIndex contains the old index of the dragged element (considering all items within sortable)
                 ui.startparent contains the element that the dragged item comes from
                 ui.endparent contains the element that the dragged item was added to (new parent)

                 */
                $(ui).find(":input [id*='ordre']").value="testttttt";

                console.log($(ui));
            });

            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container = $('#personne_skills_skills');

            console.log($container);

            // On ajoute un lien pour ajouter une nouvelle catégorie
            var $addLink = $('<a href="#" id="add_category" class="btn btn-default">Ajouter un skill</a>');
            $container.append($addLink);

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $addLink.click(function (e) {
                addCategory($container);
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = $container.find(':input').length;

            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
            if (index == 0) {
                addCategory($container);
            } else {
                // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
                $container.children('div').each(function () {
                    addDeleteLink($(this));
                });
            }

            // La fonction qui ajoute un formulaire Categorie
            function addCategory($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Skill n°' + (index + 1))
                        .replace(/__name__/g, index));

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                addDeleteLink($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression d'une catégorie
            function addDeleteLink($prototype) {
                // Création du lien
                $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

                // Ajout du lien
                $prototype.append($deleteLink);

                // Ajout du listener sur le clic du lien
                $deleteLink.click(function (e) {
                    $prototype.remove();
                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }
        });
    </script>
{% endblock %}
